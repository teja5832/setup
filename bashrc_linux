# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

if [ $UID -ne 0 ]; then
    PATH=/s/std/bin:$PATH
fi

# Set paths. Add custom paths in .bashrc.local
if [ -d "/s" ]; then
    # set linux paths
    PATH=$PATH:/usr/afsws/bin # AFS SOFTWARE
    PATH=$PATH:/bin # standard programs
    PATH=$PATH:/usr/bin # standard programs
else
    # set cygwin paths
    PATH=$PATH:/cygdrive/c/WINDOWS
    PATH=$PATH:/cygdrive/c/Progra~1/OpenAFS/Client/Program
fi

# Add Mac OS X Paths
if [ `uname` = "Darwin" ]; then
    PATH=$PATH:"/usr/local/git/bin"
fi

# The following line should be removed for security, but too
# many people get confused if it isn't there. If you remove it, "." (the
# current directory will not be in your path, and you will have to type
# (for example)
# "./a.out" instead of "a.out" in order to run the a.out program
PATH=$PATH:.

export PATH

# remove domain name (.cs.wisc.edu in our case) from hostname, if domain name
# is in hostname (otherwise, just hostname).
export HOSTNAME=`hostname | sed -e s/\\..\*//`



# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines in the history. See bash(1) for more options
# ... or force ignoredups and ignorespace
HISTCONTROL=ignoredups:ignorespace

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize cmdhist

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
    xterm*|rxvt*)
	PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
	;;
    *)
	;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
    if [ -f usr/local/etc/bash_completion ]; then
	. /usr/local/etc/bash_completion
    elif [ -f /usr/share/bash-completion/bash_completion ]; then
	. /usr/share/bash-completion/bash_completion
    elif [ -f /etc/bash_completion ]; then
	. /etc/bash_completion
    fi
fi 

export LESSOPEN="| /usr/share/source-highlight/src-hilite-lesspipe.sh %s"
export LESS=' -RN '

# ack
export ACK_PAGER="/usr/bin/less -R"

set -o noclobber
shopt -s histappend
shopt -s nocaseglob
shopt -s cdspell checkwinsize checkhash extglob
set completion-ignore-case on

############### FUNCTIONS #####################
if [ -f ~/.bash_functions ]
then
    . ~/.bash_functions
fi

#### PROMPT STUFF #####  

# Git status for prompt
function parse_git_dirty {
    [[ $(git status 2> /dev/null | tail -n1) != "nothing to commit (working directory clean)" ]] && echo "*"
}

function parse_git_branch() {
    git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
}

export CLICOLOR=1
export LSCOLORS=ExGxcxdxCxegedabagacad

PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[01;31m\] $(parse_git_branch)\[\033[00m\]\[\e[36;1m\]‚ùØ \[\e[0m\]'


export LC_ALL="en_US.UTF-8"
export LANG="en_US.UTF-8"

export EDITOR='emacs'
export DIFF='colordiff'
